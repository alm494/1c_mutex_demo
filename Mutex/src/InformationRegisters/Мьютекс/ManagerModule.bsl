Процедура СоздатьЭкземпляр(Ид, Данные = Неопределено) Экспорт

	МенеджерЗаписи = РегистрыСведений.Мьютекс.СоздатьМенеджерЗаписи(); 
	МенеджерЗаписи.Ид = Ид;
	МенеджерЗаписи.Данные = Новый ХранилищеЗначения(Данные);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция ПолучитьЭкземпляр(Ид) Экспорт

	НаборЗаписей = РегистрыСведений.Мьютекс.СоздатьНаборЗаписей();	
	НаборЗаписей.Ид = Ид;
	
	Возврат НаборЗаписей;

КонецФункции

Процедура УдалитьЭкземпляр(Ид) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.Мьютекс.СоздатьМенеджерЗаписи(); 
	МенеджерЗаписи.Ид = Ид;
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.Удалить();
	
КонецПроцедуры

Функция СоздатьЗаполнитьТаблицуЗаданий(Начало, Конец, Шаг) Экспорт
	
	Результат = Новый ТаблицаЗначений;                               
	
	ТипЧисло = Новый ОписаниеТипов("Число");
	ТипСтрока = Новый ОписаниеТипов("Строка");
	
	// Начало диапазона:
	Результат.Колонки.Добавить("Начало", ТипЧисло);
	// Конец дипазона:
	Результат.Колонки.Добавить("Конец", ТипЧисло);
	// Статус задания:
	Результат.Колонки.Добавить("Статус", ТипСтрока);
	// Общая длительность выполнения задания, мсек:
	Результат.Колонки.Добавить("Длительность", ТипЧисло);
	// Длительность ожидания на блокировках, мсек:
	Результат.Колонки.Добавить("Ожидание", ТипЧисло);
	// Результат задания (произвольный, необязательный):
	Результат.Колонки.Добавить("Результат");
	
	Н = Начало;
	Пока Истина Цикл
		
		К = Н + Шаг;
		Если К > Конец Тогда
			К = Конец;
		КонецЕсли;
		
		НСтр = Результат.Добавить();
		НСтр.Начало = Н;
		НСтр.Конец = К;
		Н = К + 1;
		Если Н >= Конец Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции