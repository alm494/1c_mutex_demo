Перем Ид Экспорт;

Процедура ОбработатьДанныеЭксклюзивно(Действие = "", ДанныеПотока = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить();
	ЭлементБлокировки.Область = "РегистрСведений.Мьютекс";
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Ид", Ид);
	
	// замер времени ожидания
	ВремяНачалаБлокировки = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	// установка блокировки
	Блокировка.Заблокировать();
	
	// звершение замера ожидания:
	ВремяОжиданияБлокировки = ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаБлокировки;
	
	Прочитать();
	Данные = ЭтотОбъект[0].Данные.Получить();	
	ПроизвестиОбменДанными(Действие, ДанныеПотока, Данные, ВремяОжиданияБлокировки);
	ЭтотОбъект[0].Данные = Новый ХранилищеЗначения(Данные);
	Записать();
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

// Процедура - Произвести быстрый обмен данными между ДаннымиПотока и общими Данными
//
// Параметры:
//  ДанныеПотока - Произвольный	 - Данные, полученные из потока
//  Данные		 - Произвольный	 - Общие данные для храненения параметров и результата
//  ВремяОжиданияБлокировки - Число - Ожидание блокировки в миллисекундах, для оценки
//                                    эффективности размера порций
//
Процедура ПроизвестиОбменДанными(Действие, ДанныеПотока, Данные, ВремяОжиданияБлокировки)
	
	Если Действие = "ОтдатьЗабратьПорцию" Тогда
		ОтдатьЗабратьПорцию(ДанныеПотока, Данные, ВремяОжиданияБлокировки)
	ИначеЕсли Действие = "ПрочитатьРезультат" Тогда
		ПрочитатьРезультат(ДанныеПотока, Данные);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОтдатьЗабратьПорцию(ДанныеПотока, Данные, ВремяОжиданияБлокировки)
	
	Если ДанныеПотока.Результат <> Неопределено Тогда
		П = Новый Структура;
		П.Вставить("Статус", "ВыданоЗадание");
		П.Вставить("Начало", ДанныеПотока.Начало);
		П.Вставить("Конец", ДанныеПотока.Конец);
		ДанныеСтроки = Данные.НайтиСтроки(П);
		Если ДанныеСтроки.Количество() > 0 Тогда
			Строка = ДанныеСтроки[0];
			ЗаполнитьЗначенияСвойств(Строка, ДанныеПотока);
			Строка.Статус = "Завершено";
			Строка.Ожидание = ВремяОжиданияБлокировки;
		КонецЕсли;
    КонецЕсли;
	
	П = Новый Структура("Статус", "");
	ДанныеСтроки = Данные.НайтиСтроки(П);
	Если ДанныеСтроки.Количество() > 0 Тогда
		Строка = ДанныеСтроки[0];
		Строка.Статус = "ВыданоЗадание";
		ЗаполнитьЗначенияСвойств(ДанныеПотока, Строка);
	Иначе
		ДанныеПотока.Статус = "Пустой";
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьРезультат(ДанныеПотока, Данные)

	ДанныеПотока = Данные;
	
КонецПроцедуры

